tmpdir is set to /home/jyu5/work/testsets/si
#INFO: **** input file is /home/jyu5/work/testsets/si/pyscf_si.py ****
#!/usr/bin/env python

'''
Gamma point Hartree-Fock/DFT

The 2-electron integrals are computed using Poisson solver with FFT by default.
In most scenario, it should be used with pseudo potential.
'''

# Note import path which is different to molecule code
from pyscf.pbc import gto, scf, dft
import numpy
import time

cell = gto.Cell()
# .a is a matrix for lattice vectors.
cell.a = '''
5.430697500  0            0
0            5.430697500  0
0            0            5.430697500'''
cell.atom = '''
              Si    0.000000000    0.000000000    0.000000000
              Si    0.000000000    2.715348700    2.715348700
              Si    2.715348700    2.715348700    0.000000000
              Si    2.715348700    0.000000000    2.715348700
              Si    4.073023100    1.357674400    4.073023100
              Si    1.357674400    1.357674400    1.357674400
              Si    1.357674400    4.073023100    4.073023100
              Si    4.073023100    4.073023100    1.357674400
              '''
cell.basis = 'gth-dzvp'
cell.pseudo = 'gth-pade'
cell.verbose = 4
cell.build()

#mf = scf.RHF(cell)
#ehf = mf.kernel()
#print("HF energy (per unit cell) = %.17g" % ehf)

start = time.time()

mf = dft.RKS(cell)
mf = mf.newton()
mf.xc = 'lda'
mf.direct_scf=True
edft = mf.kernel()
print("DFT energy (per unit cell) = %.17g" % edft)


end = time.time()
print 'DFT compute time', (end-start)
#
# By default, DFT use uniform cubic grids.  It can be replaced by atomic grids.
#
#mf = dft.RKS(cell)
#mf.grids = dft.gen_grid.BeckeGrids(cell)
#mf.xc = 'lda'
#mf.kernel()

#
# Second order SCF solver can be used in the PBC SCF code the same way in the
# molecular calculation
#
#mf = scf.RHF(cell).newton()
#mf.kernel()

#INFO: ******************** input file end ********************


System: ('Linux', 'pauling038', '3.10.0-327.36.3.el7.x86_64', '#1 SMP Thu Oct 20 04:56:07 EDT 2016', 'x86_64', 'x86_64')  Threads 28
Python 2.7.12 |Anaconda custom (64-bit)| (default, Jul  2 2016, 17:42:40) 
[GCC 4.4.7 20120313 (Red Hat 4.4.7-1)]
numpy 1.11.1  scipy 0.18.1
Date: Mon May  7 15:14:28 2018
PySCF version 1.5b
PySCF path  /home/jyu5/pyscf/pyscf
GIT HEAD      ref: refs/heads/dev
GIT dev branch  712e40e23e7a7c928f2e0c27498b3fa5f122454b

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 8
[INPUT] num. electrons = 32
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT]  1 Si     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr
[INPUT]  2 Si     0.000000000000   2.715348700000   2.715348700000 AA    0.000000000000   5.131265375694   5.131265375694 Bohr
[INPUT]  3 Si     2.715348700000   2.715348700000   0.000000000000 AA    5.131265375694   5.131265375694   0.000000000000 Bohr
[INPUT]  4 Si     2.715348700000   0.000000000000   2.715348700000 AA    5.131265375694   0.000000000000   5.131265375694 Bohr
[INPUT]  5 Si     4.073023100000   1.357674400000   4.073023100000 AA    7.696898158027   2.565632782333   7.696898158027 Bohr
[INPUT]  6 Si     1.357674400000   1.357674400000   1.357674400000 AA    2.565632782333   2.565632782333   2.565632782333 Bohr
[INPUT]  7 Si     1.357674400000   4.073023100000   4.073023100000 AA    2.565632782333   7.696898158027   7.696898158027 Bohr
[INPUT]  8 Si     4.073023100000   4.073023100000   1.357674400000 AA    7.696898158027   7.696898158027   2.565632782333 Bohr

nuclear repulsion = -33.5935722706802
number of shells = 24
number of NR pGTOs = 168
number of NR cGTOs = 104
basis = gth-dzvp
ecp = {}
CPU time:         0.44
lattice vectors  a1 [10.262530940, 0.000000000, 0.000000000]
                 a2 [0.000000000, 10.262530940, 0.000000000]
                 a3 [0.000000000, 0.000000000, 10.262530940]
dimension = 3
Cell volume = 1080.85
rcut = 29.0667467312 (nimgs = [3 3 3])
lattice sum = 311 cells
precision = 1e-08
pseudo = gth-pade
ke_cutoff = 43.1780455777
    = [31 31 31] mesh (29791 PWs)
ew_eta = 0.911349
ew_cut = 7.29632628998 (nimgs = [1 1 1])
  HOMO = 0.270199495490982  LUMO = 0.304406379135598


******** <class 'pyscf.soscf.newton_ah.SecondOrderRHF'> flags ********
method = SecondOrderRHF-RKS-RHF-SCF
initial guess = minao
damping factor = 0
level shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
DIIS start cycle = 1
DIIS space = 8
SCF tol = 1e-09
SCF gradient tol = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /home/jyu5/work/testsets/si/tmpvTCJrc
max_memory 4000 MB (current use 471 MB)
******** PBC SCF flags ********
kpt = [ 0.  0.  0.]
Exchange divergence treatment (exxdiv) = ewald
    madelung (= occupied orbital energy shift) = 0.27647151526
    Total energy shift due to Ewald probe charge = -1/2 * Nelec*madelung/cell.vol = -4.42354424416
DF object = <pyscf.pbc.df.fft.FFTDF object at 0x7f891d13ee50>


******** <class 'pyscf.pbc.df.fft.FFTDF'> flags ********
mesh = [31 31 31] (29791 PWs)
len(kpts) = 1
XC functionals = lda
Uniform grid, mesh = [31 31 31]
Set conv_tol_grad to 3.16228e-05
Initial guess |g|= 0.17526
  HOMO = 0.243588220766176  LUMO = 0.254359974396265
macro= 0  E= -31.2898048743845  delta_E= -31.2898  |g|= 0.00108177  4 KF 13 JK
macro= 1  E= -31.2898051963202  delta_E= -3.21936e-07  |g|= 2.18538e-05  2 KF 7 JK
macro= 2  E= -31.2898051963202  delta_E= -2.4869e-14  |g|= 8.46091e-06  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 3  E=-31.2898051963202  |g|= 8.46091e-06  total 7 KF 22 JK
converged SCF energy = -31.2898051963202
DFT energy (per unit cell) = -31.289805196320195
DFT compute time 39.2216639519
